{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Component } from \"react\";\nimport { autoBind } from \"react-extras\";\nimport { CreateRepoButton } from \"../components/create-repo-button\";\nimport { Popup } from \"../components/popup\";\nimport { RepoList } from \"../components/repo-list\";\nimport { SearchBar } from \"../components/search-bar\";\n\nconst query = queryString => {\n  var query = {};\n  var pairs = (queryString[0] === \"?\" ? queryString.substr(1) : queryString).split(\"&\");\n\n  for (var i = 0; i < pairs.length; i++) {\n    var pair = pairs[i].split(\"=\");\n    query[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1] || \"\");\n  }\n\n  return query;\n};\n\nexport default class Index extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"searchInput\", void 0);\n\n    this.state = {\n      search: \"\",\n      intent: null,\n      name: null\n    };\n    autoBind(this);\n  }\n\n  componentDidMount() {\n    const {\n      intent,\n      name\n    } = query(window.location.search);\n    this.setState({\n      intent,\n      name\n    });\n  }\n\n  onSearch(search) {\n    this.setState({\n      search\n    });\n  }\n\n  clearSearch() {\n    this.onSearch(\"\");\n\n    if (this.searchInput) {\n      this.searchInput.focus();\n    }\n  }\n\n  render() {\n    const {\n      search,\n      intent,\n      name\n    } = this.state;\n    return __jsx(Popup, null, __jsx(CreateRepoButton, {\n      justModal: true,\n      showInitially: intent === \"create-repo\",\n      defaultName: name\n    }), __jsx(SearchBar, {\n      innerRef: ref => this.searchInput = ref,\n      onSearch: this.onSearch,\n      value: search\n    }), __jsx(RepoList, {\n      search: search,\n      clearSearch: this.clearSearch\n    }));\n  }\n\n}","map":null,"metadata":{},"sourceType":"module"}