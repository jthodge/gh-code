{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Component } from \"react\";\nimport { autoBind } from \"react-extras\";\nimport { CreateRepoButton } from \"../components/create-repo-button\";\nimport { Popup } from \"../components/popup\";\nimport { RepoList } from \"../components/repo-list\";\nimport { SearchBar } from \"../components/search-bar\";\n\nvar query = function query(queryString) {\n  var query = {};\n  var pairs = (queryString[0] === \"?\" ? queryString.substr(1) : queryString).split(\"&\");\n\n  for (var i = 0; i < pairs.length; i++) {\n    var pair = pairs[i].split(\"=\");\n    query[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1] || \"\");\n  }\n\n  return query;\n};\n\nvar Index =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Index, _Component);\n\n  function Index(props) {\n    var _this;\n\n    _classCallCheck(this, Index);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Index).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"searchInput\", void 0);\n\n    _this.state = {\n      search: \"\",\n      intent: null,\n      name: null\n    };\n    autoBind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Index, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _query = query(window.location.search),\n          intent = _query.intent,\n          name = _query.name;\n\n      this.setState({\n        intent: intent,\n        name: name\n      });\n    }\n  }, {\n    key: \"onSearch\",\n    value: function onSearch(search) {\n      this.setState({\n        search: search\n      });\n    }\n  }, {\n    key: \"clearSearch\",\n    value: function clearSearch() {\n      this.onSearch(\"\");\n\n      if (this.searchInput) {\n        this.searchInput.focus();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          search = _this$state.search,\n          intent = _this$state.intent,\n          name = _this$state.name;\n      return __jsx(Popup, null, __jsx(CreateRepoButton, {\n        justModal: true,\n        showInitially: intent === \"create-repo\",\n        defaultName: name\n      }), __jsx(SearchBar, {\n        innerRef: function innerRef(ref) {\n          return _this2.searchInput = ref;\n        },\n        onSearch: this.onSearch,\n        value: search\n      }), __jsx(RepoList, {\n        search: search,\n        clearSearch: this.clearSearch\n      }));\n    }\n  }]);\n\n  return Index;\n}(Component);\n\nexport { Index as default };","map":null,"metadata":{},"sourceType":"module"}