{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _Object$assign from \"@babel/runtime-corejs2/core-js/object/assign\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nvar __jsx = React.createElement;\nimport React, { Component } from \"react\";\nimport { autoBind } from \"react-extras\";\nimport { ulid } from \"ulid\";\nvar DataContext = React.createContext({\n  repos: {},\n  createRepo: function () {\n    var _createRepo = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee(_repo) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              return _context.abrupt(\"return\", null);\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    function createRepo(_x) {\n      return _createRepo.apply(this, arguments);\n    }\n\n    return createRepo;\n  }(),\n  deleteRepo: function deleteRepo(_repo) {\n    return null;\n  },\n  findRepo: function findRepo(_id) {\n    return null;\n  },\n  updateRepo: function updateRepo(_repo) {\n    return null;\n  },\n  updateFooter: function updateFooter(_footer) {\n    return null;\n  },\n  loaded: false,\n  footer: null\n});\n\nvar DataProvider =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(DataProvider, _Component);\n\n  function DataProvider(props) {\n    var _this;\n\n    _classCallCheck(this, DataProvider);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(DataProvider).call(this, props));\n    autoBind(_assertThisInitialized(_this));\n    _this.state = {\n      repos: {},\n      loaded: false,\n      footer: null\n    };\n    return _this;\n  }\n\n  _createClass(DataProvider, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        var _ref, data;\n\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return browser.storage.local.get(\"data\");\n\n              case 2:\n                _ref = _context2.sent;\n                data = _ref.data;\n\n                if (data) {\n                  _context2.next = 8;\n                  break;\n                }\n\n                _context2.next = 7;\n                return browser.storage.local.set({\n                  data: {\n                    repos: {}\n                  }\n                });\n\n              case 7:\n                return _context2.abrupt(\"return\", this.setState({\n                  loaded: true\n                }));\n\n              case 8:\n                this.setState(_objectSpread({}, data, {\n                  loaded: true\n                }));\n\n              case 9:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"updateRepo\",\n    value: function updateRepo(repo) {\n      var repos = _Object$assign(this.state.repos, _defineProperty({}, repo.id, repo));\n\n      this.setState({\n        repos: repos\n      });\n      var data = {\n        repos: repos\n      };\n      browser.storage.local.set({\n        data: data\n      });\n    }\n  }, {\n    key: \"createRepo\",\n    value: function () {\n      var _createRepo2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(repo) {\n        var id, repos, data;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                id = ulid();\n                repo.id = id;\n                repos = _Object$assign(this.state.repos, _defineProperty({}, id, repo));\n                this.setState({\n                  repos: repos\n                });\n                data = {\n                  repos: repos\n                };\n                _context3.next = 7;\n                return browser.storage.local.set({\n                  data: data\n                });\n\n              case 7:\n                return _context3.abrupt(\"return\", repo);\n\n              case 8:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function createRepo(_x2) {\n        return _createRepo2.apply(this, arguments);\n      }\n\n      return createRepo;\n    }()\n  }, {\n    key: \"findRepo\",\n    value: function findRepo(id) {\n      var repos = this.state.repos;\n\n      if (!id) {\n        return null;\n      }\n\n      return repos[id];\n    }\n  }, {\n    key: \"deleteRepo\",\n    value: function deleteRepo(_ref2) {\n      var id = _ref2.id;\n\n      var repos = _Object$assign(this.state.repos, {});\n\n      delete repos[id];\n      this.setState({\n        repos: repos\n      });\n      var data = {\n        repos: repos\n      };\n      browser.storage.local.set({\n        data: data\n      });\n    }\n  }, {\n    key: \"updateFooter\",\n    value: function updateFooter(footer) {\n      this.setState({\n        footer: footer\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var children = this.props.children;\n      var _this$state = this.state,\n          repos = _this$state.repos,\n          loaded = _this$state.loaded,\n          footer = _this$state.footer;\n      return __jsx(DataContext.Provider, {\n        value: {\n          repos: repos,\n          createRepo: this.createRepo,\n          deleteRepo: this.deleteRepo,\n          updateRepo: this.updateRepo,\n          findRepo: this.findRepo,\n          updateFooter: this.updateFooter,\n          loaded: loaded,\n          footer: footer\n        }\n      }, children);\n    }\n  }]);\n\n  return DataProvider;\n}(Component);\n\nvar DataConsumer = DataContext.Consumer;\nexport { DataProvider, DataConsumer, DataContext };","map":null,"metadata":{},"sourceType":"module"}