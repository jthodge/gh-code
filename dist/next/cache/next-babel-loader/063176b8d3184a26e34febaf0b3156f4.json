{"ast":null,"code":"import _Object$entries from \"@babel/runtime-corejs2/core-js/object/entries\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { autoBind, Choose } from \"react-extras\";\nimport { Component } from \"react\";\nimport { Pane, Heading, minorScale, Button } from \"evergreen-ui\";\nimport { RepoRow } from \"../repo-row\";\nimport { withData } from \"../../hocs/with-data\";\nimport { SearchingIcon } from \"../searching-icon\";\nimport { CreateRepoButton } from \"../create-repo-button\";\n\nclass RepoList extends Component {\n  constructor(props) {\n    super(props);\n    autoBind(this);\n  }\n\n  filterRepos() {\n    const {\n      repos,\n      search\n    } = this.props;\n    return _Object$entries(repos).map(([_key, repo]) => repo).filter(({\n      name\n    }) => name.includes(search));\n  }\n\n  render() {\n    const {\n      search,\n      clearSearch,\n      loaded,\n      repos: allRepos\n    } = this.props;\n    const filteredRepos = this.filterRepos();\n    const repos = filteredRepos.map(repo => __jsx(RepoRow, {\n      repo: repo\n    }));\n    return __jsx(Choose, null, __jsx(Choose.When, {\n      condition: repos.length > 0 || !loaded\n    }, __jsx(Pane, {\n      flexGrow: 1,\n      overflow: \"auto\"\n    }, repos)), __jsx(Choose.Otherwise, null, __jsx(Pane, {\n      tint: \"red\",\n      alignItems: \"center\",\n      display: \"flex\",\n      flexDirection: \"column\",\n      height: \"100%\",\n      justifyContent: \"center\",\n      padding: 16,\n      paddingTop: 0,\n      width: \"100%\"\n    }, __jsx(SearchingIcon, {\n      size: 75\n    }), __jsx(Choose, null, __jsx(Choose.When, {\n      condition: _Object$entries(allRepos).length > 0\n    }, __jsx(Heading, {\n      marginTop: minorScale(3),\n      textAlign: \"center\",\n      size: 400\n    }, \"Uh-oh, we couldn't find any repositories with that query.\"), __jsx(Pane, {\n      alignItems: \"center\",\n      display: \"flex\",\n      justifyContent: \"space-between\",\n      marginTop: minorScale(3)\n    }, __jsx(Button, {\n      onClick: clearSearch\n    }, \"Clear query\"), __jsx(CreateRepoButton, {\n      defaultName: search,\n      value: \"Create repository\",\n      hasIcon: false\n    }))), __jsx(Choose.Otherwise, null, __jsx(Heading, {\n      marginTop: minorScale(3),\n      textAlign: \"center\",\n      size: 400\n    }, \"It looks like you don't have any repositories configured.\"), __jsx(Pane, {\n      alignItems: \"center\",\n      display: \"flex\",\n      justifyContent: \"center\",\n      marginTop: minorScale(3)\n    }, __jsx(CreateRepoButton, {\n      defaultName: search.length > 0 ? search : undefined,\n      value: \"Create repository\",\n      hasIcon: false\n    })))))));\n  }\n\n}\n\nexport default withData(RepoList);","map":null,"metadata":{},"sourceType":"module"}