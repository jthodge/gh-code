{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { autoBind, If } from \"react-extras\";\nimport { Component, Fragment } from \"react\";\nimport { Dialog, Button, minorScale, TextInputField } from \"evergreen-ui\";\nimport { withRouter } from \"next/router\";\nimport { withData } from \"../../hocs/with-data\";\n\nvar isInvalid = function isInvalid(value) {\n  if (value === null) {\n    return false;\n  }\n\n  return value.length === 0;\n};\n\nvar empty = function empty(value) {\n  return value === null || value.length === 0;\n};\n\nvar CreateRepoButton =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CreateRepoButton, _Component);\n\n  function CreateRepoButton(props) {\n    var _this;\n\n    _classCallCheck(this, CreateRepoButton);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CreateRepoButton).call(this, props));\n    autoBind(_assertThisInitialized(_this));\n    _this.state = {\n      showPrompt: false,\n      name: null,\n      localPath: null\n    };\n    return _this;\n  }\n\n  _createClass(CreateRepoButton, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(_ref) {\n      var oldShowInitially = _ref.showInitially;\n      var _this$props = this.props,\n          showInitially = _this$props.showInitially,\n          defaultName = _this$props.defaultName;\n\n      if (showInitially && showInitially !== oldShowInitially) {\n        this.setState({\n          showPrompt: true,\n          name: defaultName\n        });\n      }\n    }\n  }, {\n    key: \"createRepo\",\n    value: function () {\n      var _createRepo = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var _this$props2, createRepo, router, _this$state, name, localPath, _ref2, id;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _this$props2 = this.props, createRepo = _this$props2.createRepo, router = _this$props2.router;\n                _this$state = this.state, name = _this$state.name, localPath = _this$state.localPath;\n                _context.next = 4;\n                return createRepo({\n                  name: name,\n                  localPath: localPath\n                });\n\n              case 4:\n                _ref2 = _context.sent;\n                id = _ref2.id;\n                router.push(\"/details?id=\".concat(id));\n\n              case 7:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function createRepo() {\n        return _createRepo.apply(this, arguments);\n      }\n\n      return createRepo;\n    }()\n  }, {\n    key: \"close\",\n    value: function close() {\n      this.setState({\n        showPrompt: false,\n        name: null,\n        localPath: null\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props3 = this.props,\n          _this$props3$value = _this$props3.value,\n          value = _this$props3$value === void 0 ? \"New\" : _this$props3$value,\n          _this$props3$hasIcon = _this$props3.hasIcon,\n          hasIcon = _this$props3$hasIcon === void 0 ? true : _this$props3$hasIcon,\n          _this$props3$defaultN = _this$props3.defaultName,\n          defaultName = _this$props3$defaultN === void 0 ? null : _this$props3$defaultN,\n          _this$props3$justModa = _this$props3.justModal,\n          justModal = _this$props3$justModa === void 0 ? false : _this$props3$justModa;\n      var _this$state2 = this.state,\n          showPrompt = _this$state2.showPrompt,\n          name = _this$state2.name,\n          localPath = _this$state2.localPath;\n      var isConfirmDisabled = empty(name) || empty(localPath);\n      return __jsx(Fragment, null, __jsx(Dialog, {\n        confirmLabel: \"Create\",\n        intent: \"success\",\n        isConfirmDisabled: isConfirmDisabled,\n        isShown: showPrompt,\n        onCancel: this.close,\n        onConfirm: this.createRepo,\n        title: \"Create Repository\",\n        onCloseComplete: this.close\n      }, __jsx(TextInputField, {\n        autoFocus: true,\n        isInvalid: isInvalid(name),\n        label: \"Name\",\n        onChange: function onChange(e) {\n          return _this2.setState({\n            name: e.target.value\n          });\n        },\n        placeholder: \"maxchehab/gh-code\",\n        required: true,\n        value: name,\n        validationMessage: isInvalid(name) ? \"This field is required\" : undefined\n      }), __jsx(TextInputField, {\n        isInvalid: isInvalid(localPath),\n        label: \"Local path\",\n        onChange: function onChange(e) {\n          return _this2.setState({\n            localPath: e.target.value\n          });\n        },\n        placeholder: \"/home/projects/gh-code\",\n        required: true,\n        value: localPath,\n        validationMessage: isInvalid(localPath) ? \"This field is required\" : undefined\n      })), __jsx(If, {\n        condition: !justModal\n      }, __jsx(Button, {\n        appearance: \"primary\",\n        iconBefore: hasIcon ? \"git-repo\" : undefined,\n        intent: \"success\",\n        marginLeft: minorScale(3),\n        onClick: function onClick() {\n          _this2.setState({\n            showPrompt: true,\n            name: defaultName\n          });\n        }\n      }, value)));\n    }\n  }]);\n\n  return CreateRepoButton;\n}(Component);\n\nexport default withRouter(withData(CreateRepoButton));","map":null,"metadata":{},"sourceType":"module"}